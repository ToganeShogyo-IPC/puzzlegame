<!DOCTYPE HTML>
<html>
    <head>
        <title></title>
        <style>
            body {
                margin: 0;
                overflow: hidden;
                display: flex;
                align-items: center;
                justify-content: center;
                height: 100vh;
                background-color: #000; /* ゲーム画面以外の背景色を設定 */
            }
    
            canvas {
                display: block;
            }
        </style>
    </head>
    <script src = "lib/phaser.min.js"></script>
    <body>
        <script>
            var gridrow = 7;
            var gridcol = 11;
            var gridsize = 100;

            var config = {
                type: Phaser.AUTO,
                width: 1100,
                height: 700,
                scene: {
                    preload: preload,
                    create: create,
                    update: update,
                }
            };
            var grid;
            var background;
            
            function drawGrid(rowCount,colCount,cellSize){ //グリッド書く関数 (引数→よこ,たて,セルサイズ)
                grid.clear();
                var width = colCount * cellSize;
                var height = rowCount * cellSize;

                grid.lineStyle(1, 0xffffff, 1);

                for (var i = 0; i <= rowCount; i++) {
                    var y = i * cellSize;
                    grid.moveTo(0, y);
                    grid.lineTo(width, y);
                }
            
                for (var i = 0; i <= colCount; i++) {
                    var x = i * cellSize;
                    grid.moveTo(x, 0);
                    grid.lineTo(x, height);
                }
            
                grid.strokePath();
            }

            function preload(){ //リソースの読み込み
                this.load.spritesheet("witch","img/character/witch.png", {frameWidth:32,frameHeight:32});
            }

            function create(){ //オブジェクト生成
                background = this.add.graphics();
                grid = this.add.graphics();

                background.fillStyle(0xDCDCE6, 1);
                background.fillRect(0, 0, game.config.width, game.config.height);
                drawGrid(gridrow,gridcol,gridsize);
                
                var player = this.add.sprite(50,50,"witch").setInteractive({ draggable: true });
                
                this.input.on('dragstart', function (pointer, gameObject) {
                    gameObject.setTint(0xff0000); // ドラッグ中のキャラクターの色を変更
                });
            
                this.input.on('drag', function (pointer, gameObject, dragX, dragY) {
                    if(dragX < 0){
                        dragX = 0;
                    }
                    if(dragY < 0){
                        dragY = 0;
                    }
                    if(dragX > 1100){
                        dragX = 1050;
                    }
                    if(dragY > 700){
                        dragY = 650;
                    }

                    gameObject.x = Phaser.Math.Snap.To(dragX, gridsize,50);
                    gameObject.y = Phaser.Math.Snap.To(dragY, gridsize,50);
                });
            
                this.input.on('dragend', function (pointer, gameObject) {
                    gameObject.clearTint(); // ドラッグが終了したら色をクリア
                });
                
                this.anims.create({
                    key: "down",
                    frames: this.anims.generateFrameNumbers("witch",{start:0,end:2}),
                    frameRate: 5,
                    repeat: -1
                });
                player.anims.play("down",true);
            }

            function update(){ //プレイ中に更新する必要がある何か

            }

            var game = new Phaser.Game(config);
        </script>
    </body>
</html>